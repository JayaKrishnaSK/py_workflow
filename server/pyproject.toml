[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentic-workflow-server"
version = "0.1.0"
description = "Dynamic agentic workflow executor with LangChain and LangGraph"
authors = [
    {name = "Agentic Workflow Team", email = "team@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-core>=0.1.0",
    "langgraph>=0.0.20",
    "langsmith>=0.0.70",
    "langchain-google-genai>=0.0.6",
    "langchain-ollama>=0.0.1",
    "motor>=3.3.2",
    "pymongo>=4.6.0",
    "beanie>=1.23.6",
    "arize-phoenix>=1.0.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "httpx>=0.25.2",
    "aiohttp>=3.9.1",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 100

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]